pipeline {
    agent {
        label 'agent-1-label'
    }
    options{
        timeout(time: 50, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select action')
    }


    stages {
        stage('init') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                    sh """
                        cd 61-ingress-ALB
                        terraform init -reconfigure
                    """
                }
            }
        }
        stage('plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                    sh """
                        cd 61-ingress-ALB
                        terraform plan -out=tfplan
                   """
                }
            }
        }
        stage('apply or destroy') {
            input {
                message "Should we continue to ${params.ACTION}"
                ok "Yes,  ${params.ACTION} "
            }
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                sh """
                    cd 61-ingress-ALB
                    if [ ${params.ACTION} == 'apply' ]
                    then
                        terraform apply -auto-approve tfplan
                    elif [ ${params.ACTION} == 'destroy' ]
                    then
                        terraform destroy -auto-approve
                    fi
                """
                }
            }
        }
    }

    post {
        always{
            echo 'this will run always'
            deleteDir()
        }
        success{
            echo 'this will run on success'
        }
        failure{
            echo 'this will run at failure'
        }
    }
}
