pipeline {
    agent {
        label 'agent-1-label'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        // retry(1)
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select action')
    }


    stages {
        stage('init') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                    sh """
                        cd 01-vpc
                        terraform init -reconfigure
                    """
                }
            }
        }
        // stage('plan') {
        //     steps {
        //         withAWS(region: 'us-east-1', credentials: 'aws-cred') {
        //             sh """
        //                 cd 01-vpc
        //                 terraform plan -out=tfplan
        //            """
        //         }
        //     }
        // }
        // stage('apply or destroy') {
        //     when {
        //         expression {params.ACTION == 'apply'}
        //     }
        //     steps {
        //             sh '''
                        
        //             '''
        //     }
        // }

        // stage('Deploy') {
        //     when {
        //         expression { env.GIT_BRANCH == 'origin/main' }
        //     }
        //     steps {
        //             sh 'echo This is deploy'
        //             //error 'pipeline failed'
        //     }
        // }
        // stage('Print Params'){
        //     steps{
        //         echo "Hello ${params.PERSON}"
        //         echo "Biography: ${params.BIOGRAPHY}"
        //         echo "Toggle: ${params.TOGGLE}"
        //         echo "Choice: ${params.CHOICE}"
        //         echo "Password: ${params.PASSWORD}"  
        //     }
        // }
        // stage('Approval'){
        //     input {
        //         message "Should we continue?"
        //         ok "Yes, we should."
        //         submitter "alice,bob"
        //         parameters {
        //             string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        //         }
        //     }
        //     steps {
        //         echo "Hello, ${PERSON}, nice to meet you."
        //     }
        // }
    }

    post {
        always{
            echo 'this will run always'
            deleteDir()
        }
        success{
            echo 'this will run on success'
        }
        failure{
            echo 'this will run at failure'
        }
    }
}
